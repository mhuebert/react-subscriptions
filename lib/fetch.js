// Generated by CoffeeScript 1.6.1

/*

    Fetch data (once) from multiple subscription objects and put all results into a single object.
*/


(function() {
  var async, _;

  _ = require("underscore");

  async = require("async");

  module.exports = function(subscriptions, fetchCallback) {
    var getData, list;
    list = _.chain(subscriptions).pairs().map(function(pair) {
      if (!pair[1].server) {
        return false;
      }
      return _.extend(pair[1], {
        path: pair[0]
      });
    }).value().filter(Boolean);
    getData = function(subscription, callback) {
      return subscription.subscribe(function(data) {
        var object;
        object = {};
        object[subscription.path] = data;
        callback(null, object);
        return subscription.unsubscribe();
      }, {
        wait: true
      });
    };
    return async.map(list, getData, function(err, data) {
      var object, result, _i, _len;
      object = {};
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        result = data[_i];
        _.extend(object, result);
      }
      return fetchCallback(object);
    });
  };

}).call(this);
